<config>
{
  pages: [
    'pages/home',
    'pages/demo',
    'pages/webview',
    'pages/camera',
  ],
  // 分包目录
  subPackages: [
    { // 问卷
      root: 'subPackages/questionnaire',
      name: 'questionnaire',
      pages: [
        'list',
      ]
    },
  ],
  // tabBar: {
  //   "custom": true,
  //   "color": "#333",
  //   "selectedColor": "#41a3ff",
  //   "borderStyle": "black",
  //   "backgroundColor": "#ffffff",
  //   "list": [
  //     {
  //       'pagePath': 'pages/home',
  //       'iconPath': '/statics/images/icon_share.png',
  //       'selectedIconPath': '/statics/images/icon_share_r.png',
  //       'text': 'share'
  //     },
  //     {
  //       'pagePath': 'pages/activityList',
  //       'iconPath': '/statics/images/icon_fun.png',
  //       'selectedIconPath': '/statics/images/icon_fun_r.png',
  //       'text': 'fun'
  //     },
  //     {
  //       'pagePath': 'pages/user',
  //       'iconPath': '/statics/images/icon_me.png',
  //       'selectedIconPath': '/statics/images/icon_me_r.png',
  //       'text': 'me'
  //     }
  //   ]
  // },
  window: {
    backgroundTextStyle: 'dark',
    navigationBarBackgroundColor: '#fff',
    navigationBarTitleText: 'wepy2',
    navigationBarTextStyle: 'black'
  },
  navigateToMiniProgramAppIdList: [], // 需要调整到其他小程序的appId列表
  permission: {
    "scope.userLocation": {
      "desc": "你的位置信息将用于小程序数据排序"
    }
  }
}
</config>
<script>
import wepy from '@wepy/core'
import store from './store'
import promisify from '@wepy/use-promisify'
wepy.use(promisify)
wepy.app({
  hooks: {
  },
  async onShow (options) {
    // 获取其他小程序或app跳转过来带的accessToken
    const { referrerInfo: { extraData: { accessToken: accessTokenSapp = '' } = {}, accessToken: accessTokenApp = '' } = {} } = options || {}
    const accessToken = accessTokenSapp || accessTokenApp || ''
    try {
      // 检查用户信息授权
      // const { authSetting = {} } = await wepy.wx.getSetting() || {}
      // if (!authSetting['scope.userInfo'] || accessToken) {
      //   // 由于默认的自动登录标识为1，所以如果用户没有授权则不自动登录
      //   store.dispatch('updateAutoWechatLogin', 0)
      // }
      if (accessToken) {
        store.dispatch('updateAccessToken', accessToken)
      }
      const language = wx.getStorageSync('language') || store.state.system.language
      // 初始化语言库
      store.dispatch('initialLanguage', language)
      // setTimeout(() => {
      //   store.dispatch('initialLanguage', 'en')
      // }, 3000)
    } catch (e) {
      console.error('app onShow', e)
    }
  },
  async onLaunch () {
    if (wx.canIUse('getUpdateManager')) {
      const updateManager = wx.getUpdateManager()
      updateManager.onCheckForUpdate((res) => {
        console.log('onCheckForUpdate====', res)
        // 请求完新版本信息的回调
        if (res.hasUpdate) {
          console.log('res.hasUpdate====')
          updateManager.onUpdateReady(async () => {
            // const { confirm } = await wepy.wx.showModal({
            //   title: '更新提示',
            //   content: '新版本已经准备好，是否重启应用？'
            // })
            // if (confirm) {
            updateManager.applyUpdate()
            // }
          })
          updateManager.onUpdateFailed(async (error) => {
            // 新的版本下载失败
            console.log('onUpdateFailed', error)
          })
        }
      })
    }
  },
  methods: {}
})

</script>
<style lang="less">
@import '~@/assets/less/lib-reset.less';
@import '~@/assets/less/lib-ui.less';
@import '~@/assets/less/style.less';
</style>
