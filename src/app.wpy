<config>
{
  pages: [
    'pages/home',
    'pages/user',
    'pages/webview',
  ],
  // 分包目录
  subPackages: [
    {
      root: 'subPackages/pack1/',
      name: 'pack1',
      pages: [
        'page1',
      ]
    },
  ],
  tabBar: {
    "custom": true,
    "color": "#333",
    "selectedColor": "#41a3ff",
    "borderStyle": "black",
    "backgroundColor": "#ffffff",
    "list": [ 
      {
        "pagePath": "pages/home",
        "iconPath": "/statics/images/icon_index_home_gray.png",
        "selectedIconPath": "/statics/images/icon_index_home_blue.png",
        "text": "首页"
      },
      {
        "pagePath": "pages/user",
        "iconPath": "/statics/images/icon_index_my_gray.png",
        "selectedIconPath": "/statics/images/icon_index_my_blue.png",
        "text": "我的"
      }
    ]
  },
  window: {
    backgroundTextStyle: 'dark',
    navigationBarBackgroundColor: '#fff',
    navigationBarTitleText: '自在社区享家',
    navigationBarTextStyle: 'black'
  },
  navigateToMiniProgramAppIdList: [], // 需要调整到其他小程序的appId列表
  permission: {
    "scope.userLocation": {
      "desc": "你的位置信息将用于小程序位置接口的效果展示"
    }
  }
}
</config>
<script>
import wepy from '@wepy/core'
import store from './store'
import promisify from '@wepy/use-promisify'
wepy.use(promisify)
wepy.app({
  hooks: {
  },
  async onShow (options) {
    // 获取其他小程序或app跳转过来带的accessToken
    const { referrerInfo: { extraData: { accessToken: accessTokenSapp = '' } = {}, accessToken: accessTokenApp = '' } = {} } = options || {}
    const accessToken = accessTokenSapp || accessTokenApp || ''
    try {
      // 检查用户信息授权
      const { authSetting = {} } = await wepy.wx.getSetting() || {}
      if (!authSetting['scope.userInfo'] || accessToken) {
        // 由于默认的自动登录标识为1，所以如果用户没有授权则不自动登录
        store.dispatch('updateAutoWechatLogin', 0)
      }
      if (accessToken) {
        store.dispatch('updateAccessToken', accessToken)
      }
      const language = wx.getStorageSync('language') || store.state.system.language
      // 初始化语言库
      store.dispatch('initialLanguage', language)
      // setTimeout(() => {
      //   store.dispatch('initialLanguage', 'en')
      // }, 3000)
    } catch (e) {
      console.error('app onShow', e)
    }
  },
  methods: {}
})
</script>
<style lang="less">
@import '~@/assets/less/lib-reset.less';
@import '~@/assets/less/lib-ui.less';
@import '~@/assets/less/style.less';
</style>
