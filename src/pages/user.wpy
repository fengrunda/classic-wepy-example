<template>
  <view class="main-wrapper user pb-116">
    <view class="user__bg-rect pos-f l-0 t-0 r-0" style="{{'padding-top:'+ (statusBarHeight + 44) +'px;'}}"></view>
    <view class="user__header-title pos-f l-0 r-0 ta-c" style="{{'top:'+ statusBarHeight +'px;'}}">User</view>
    <view class="user__bg-rect_white pos-r l-0 t-0 r-0" style="{{'padding-top:'+ (statusBarHeight + 44) +'px;'}}"></view>
    <image class="img-empty d-b" style="padding-top:130rpx;" src="@/assets/images/pic_empty_card.png" ></image>
    <tabBar></tabBar>
  </view>
</template>
<config>
{
  navigationBarTitleText: '我的',
  navigationStyle: 'custom',
  navigationBarTextStyle: 'white',
  backgroundColor: '#f5f5f9',
  usingComponents: {
    tabBar: '~@/components/tabBar'
  }
}
</config>
<script>
import wepy from '@wepy/core'
import store from '@/store'
import { mapState, mapActions } from '@wepy/x'
import initPage from '@/mixins/initPage.js'
import apiActions from '@/config/api.js'
import { errorFormatter } from '@/config/utils.js'
wepy.page({
  store,
  mixins: [initPage],
  data: {

  },
  computed: {
    ...mapState({
      statusBarHeight: state => state.system.statusBarHeight || 20
    })
  },
  methods: {
    ...mapActions({
      updateOpenId: 'updateOpenId',
      updateUnionId: 'updateUnionId'
    }),
    /**
     * 获取用户信息
     */
    initUserInfo (accessToken) {
      return new Promise(async (resolve, reject) => {
        try {
          const { data: { member, user } = {} } = await apiActions.user.getMyUserInfo({ params: { access_token: accessToken } }) || {}
          resolve({ member, user })
        } catch (error) {
          console.error('user getMyUserInfo', error)
          reject(error)
        }
      })
    }
  },
  async onShow () {
    wx.showLoading({ title: '正在加载...', mask: true })
    try {
      const { accessToken } = await this.autoLogin() // 尝试自动登录，强制要有登录态
      const { data = {} } = await this.initUserInfo(accessToken)
      console.log(data)
      wx.hideLoading()
    } catch (error) {
      console.error('user onShow', error)
      wx.hideLoading()
      wx.showToast({ duration: 3000, title: errorFormatter(error, 'user onShow'), icon: 'none' })
    }
  }
})
</script>
<style lang="less">
@import '~@/assets/less/lib-base.less';
@import '~@/assets/less/lib-mixins.less';
.user {
  background-color: #f5f5f9;
}
.user__bg-rect {
  box-sizing: content-box;
  height: 156rpx + 10rpx;
  background-color: @c_main_blue;
  z-index: 5;
}
.user__bg-rect_white {
  box-sizing: content-box;
  height: 156rpx + 10rpx;
  background-color: #fff;
}
.user__header-title {
  height: 44px;
  line-height: 44px;
  top: 52rpx;
  font-size: 18px;
  font-weight: bold;
  color: #fff;
  z-index: 6;
}
.img-empty {
  .imgSize('../images/pic_empty_card.png'); // mixins方法，相对路按照lib-mixins.less文件的位置计算
  width: @imgW; // 获取mixins方法的变量
  height: @imgH; // 获取mixins方法的变量
}
</style>
