<template>
  <view class="main-wrapper pack1__page1">
    <!-- 自定义状态栏时需要自己添加返回按钮 -->
    <navCustom></navCustom>
    <view class="pack1__page1__header-title pos-r ta-c" style="{{'margin-top:'+ statusBarHeight +'px;'}}">page1</view>
    <view class="map-container fxsh-1 fxg-1 d-b pos-r">
      <map id="map" class="pos-a l-0 t-0 r-0 b-0" markers="{{markers}}" bindmarkertap="markertap" bindupdated="handleUpdated" bindregionchange="handleRegionchange" bindbegin="handleRegionchangeBegin" bindend="handleRegionchangeEnd" polyline="{{polyline}}" longitude="{{locationInfo.longitude}}" latitude="{{locationInfo.latitude}}" scale="14" show-location="{{true}}">
        <image class="select-point" src="@/assets/images/icon_location_r.png"></image>
        <button bindtap="handleResetPosition" class="reset-position-btn">
          <image class="reset-position-btn__icon d-b" src="@/assets/images/icon_location_b.png"></image>
        </button>
      </map>
      <input class="pack1__page1__input_search-location pos-r d-b mt-30 ml-30 mr-30" type="text">
    </view>

    <official-account class="pos-r d-b"></official-account>
  </view>
</template>
<config>
{
  navigationBarTitleText: 'page1',
  navigationStyle: 'custom',
  usingComponents: {
    navCustom: '~@/components/navCustom' 
  }
}
</config>
<script>
import wepy from '@wepy/core'
import store from '@/store'
import initPage from '@/mixins/initPage.js'
// import apiActions from '@/config/api.js'
import { mapState, mapActions } from '@wepy/x'
import { errorFormatter } from '@/config/utils.js'
import QQMapWX from 'STAITICS/js/qqmap-wx-jssdk.min.js'
wepy.page({
  store,
  mixins: [initPage],
  data: {
    mapCtx: null,
    qqmapsdk: null,
    locationInfo: {},
    markers: [
      // {
      //   iconPath: '/statics/images/icon_index_home_blue.png',
      //   id: 0,
      //   latitude: 0,
      //   longitude: 0,
      //   width: 30,
      //   height: 30
      // }
    ],
    polyline: [
      // {
      //   points: [
      //     {
      //       longitude: 113.3245211,
      //       latitude: 23.10229
      //     }, {
      //       longitude: 113.324520,
      //       latitude: 23.21229
      //     }
      //   ],
      //   color: '#FF0000DD',
      //   width: 2,
      //   dottedLine: true
      // }
    ]
  },
  computed: {
    ...mapState({
      statusBarHeight: state => state.system.statusBarHeight || 20
    })
  },
  methods: {
    markertap (e) {
      console.log(e)
    },
    handleUpdated (e) {
      console.log('handleUpdated', e)
    },
    handleRegionchange (e) {
      console.log('handleRegionchange', e)
    },
    handleRegionchangeBegin (e) {
      console.log('handleRegionchangeBegin', e)
    },
    handleRegionchangeEnd (e) {
      console.log('handleRegionchangeEnd', e)
      if (e.$wx.causedBy === 'scale') {
        return
      }
      this.mapCtx.getCenterLocation({
        complete: ({ longitude = 0, latitude = 0 }) => {
          console.log('getCenterLocation', longitude, latitude)
          this.qqmapsdk.reverseGeocoder({
            location: {
              longitude,
              latitude
            },
            get_poi: 1,
            poi_options: 'radius=50&policy=2',
            success: ({ status, message, result }) => {
              console.log(result)
            },
            fail: ({ status, message }) => {
              console.log({ status, message })
            }
          })
        }
      })
    },
    handleResetPosition (e) {
      console.log('handleResetPosition', e, this.locationInfo)
      this.mapCtx.moveToLocation({
        location: {
          longitude: this.locationInfo.longitude,
          latitude: this.locationInfo.latitude
        },
        success: ({ status, message, result }) => {
          console.log('moveToLocation success', { status, message, result })
        },
        fail: ({ status, message }) => {
          console.log('moveToLocation success', { status, message })
        }
      })
    }
  },
  onLoad () {
    // 实例化API核心类
    this.qqmapsdk = new QQMapWX({
      key: 'UUBBZ-NM26V-PBRPE-ULVZ7-DLPHH-THBMO'
    })
    this.mapCtx = wx.createMapContext('map')
    console.log('mapCtx', this.mapCtx)
  },
  async onShow () {
    wx.showLoading({ title: '正在加载...', mask: true })
    try {
      // TODO 页面前置判断接口
      wx.hideLoading()
      try {
        this.locationInfo = await wepy.wx.getLocation({
          type: 'gcj02'
        })
        console.log('locationInfo', this.locationInfo)
        // this.markers[0].latitude = this.locationInfo.latitude
        // this.markers[0].longitude = this.locationInfo.longitude
        this.qqmapsdk.reverseGeocoder({ // https://lbs.qq.com/qqmap_wx_jssdk/method-reverseGeocoder.htmlhttps://lbs.qq.com/qqmap_wx_jssdk/method-reverseGeocoder.html
          location: {
            longitude: this.locationInfo.longitude,
            latitude: this.locationInfo.latitude
          },
          // location: { latitude: 23.120841, longitude: 113.329396 },
          get_poi: 1,
          poi_options: 'radius=500&policy=2',
          success: ({ status, message, result }) => {
            console.log(result)
          },
          fail: ({ status, message }) => {
            console.log({ status, message })
          }
        })
      } catch (error) {
        console.log(error)
      }
    } catch (error) {
      wx.hideLoading()
      wx.showToast({ duration: 3000, title: errorFormatter(error, 'home onload'), icon: 'none' })
    }
  }
})
</script>
<style lang="less">
@import '~@/assets/less/lib-base.less';
@import '~@/assets/less/lib-mixins.less';
.pack1__page1 {
}
.pack1__page1__header-title {
  height: 44px;
  line-height: 44px;
  margin-top: 52rpx;
  font-size: 18px;
  font-weight: bold;
}
#map {
  height: 100%;
  width: 100%;
}
.select-point {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -100%);
  .imgSize('../images/icon_location_r.png');
  width: @imgW;
  height: @imgH;
}
.pack1__page1__input_search-location {
  height: 50rpx;
  background-color: #fff;
  line-height: 50px;
}
.reset-position-btn {
  position: absolute;
  left: 30rpx;
  bottom: 100rpx;
  background-color: transparent;
  padding: 0;
  border-radius: 0;
}
.reset-position-btn__icon {
  .imgSize('../images/icon_location_b.png');
  width: @imgW;
  height: @imgH;
}
</style> 
